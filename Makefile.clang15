

USE_SENSEI=
USE_MAGI=

CXX=clang++-15


MPI_FLAGS=-I/usr/include/mpich-x86_64
MPI_LINK=-L/usr/lib64/mpich/lib -Wl,-rpath -Wl,/usr/lib64/mpich/lib -Wl,--enable-new-dtags -lmpi

# for debug build add :  -Xarch_host -g -Xarch_host -O0
OMP_FLAGS=-DNEWTONPP_ENABLE_OMP -DNEWTONPP_ENABLE_CUDA -fopenmp -fopenmp-targets=nvptx64 -Xopenmp-target=nvptx64 --offload-arch=sm_75 -Xarch_host -g -Xarch_host -O3
OMP_LINK=

CFLAGS=-Wall -Wextra -fPIE -std=c++17
C_OPT_FLAGS=-g -O3 -march=native -mtune=native
CLINK=-lm -lstdc++

CUDA=/usr/local/cuda-12.0/lib64/
CUDA_OPT_FLAGS=-O3
CUDA_XOPT_FLAGS=-g,-O3,-march=native,-mtune=native
CUDA_LINK=


SENSEI=/work/SENSEI/sensei-svtk-install
ifneq ($(USE_SENSEI),)
	CFLAGS += -DNEWTONPP_ENABLE_SENSEI
	SENSEI_LINK=`${SENSEI}/bin/sensei_config --libs`
	SENSEI_FLAGS=`${SENSEI}/bin/sensei_config --cflags`
	SENSEI_PYTHON_DIR=`${SENSEI}/bin/sensei_config --python-dir`
	SENSEI_LINK += -Wl,-rpath=$(SENSEI_PYTHON_DIR)
endif

ifneq ($(USE_SENSEI),)
	HAMR=$(SENSEI)/
else
	HAMR=/work/SENSEI/HAMR-clang15_omp/
endif
HAMR_FLAGS=-I$(HAMR)/include
HAMR_LINK=$(HAMR)/lib64/libhamr.a

ifneq ($(USE_MAGI),)
	CFLAGS += -DNEWTONPP_ENABLE_MAGI
	HDF5_FLAGS=-I/usr/include/mpich-x86_64
	HDF5_LINK=-L/usr/lib64/mpich/lib -lhdf5
endif


.PHONY: all
all : stream_compact.a newtonpp_clang15_omp

.PHONY: ics
ics: galaxy_ic plot_ic

.PHONY: clean
clean:
	rm -f *.o stream_compact.a newtonpp_clang15_omp




stream_compact.a: stream_compact.cu stream_compact.cxx
	$(CXX) $(CFLAGS) $(C_OPT_FLAGS) -fPIC stream_compact.cxx -c -o stream_compact_cpu.o
	nvcc $(CUDA_OPT_FLAGS) -arch=sm_75 -dc -o stream_compact_dc.o stream_compact.cu -Xcompiler -fPIE,$(CUDA_XOPT_FLAGS)
	nvcc $(CUDA_OPT_FLAGS) -arch=sm_75 -dlink -o stream_compact.o stream_compact_dc.o -lcudart -Xcompiler -fPIE,$(CUDA_XOPT_FLAGS)
	rm -f stream_compact.a
	ar cru stream_compact.a stream_compact_cpu.o stream_compact.o stream_compact_dc.o
	ranlib stream_compact.a


%.o: %.cpp
	$(CXX) $(OMP_FLAGS) $(MPI_FLAGS) $(HDF5_FLAGS) $(CFLAGS) $(C_OPT_FLAGS) $(HAMR_FLAGS) $(SENSEI_FLAGS) -I./ -c $< -o $@


newtonpp_objs=domain_decomp.o initialize_file.o patch_data.o communication.o \
	 initialize_random.o patch.o patch_force.o solver.o write_vtk.o command_line.o

ifneq ($(USE_SENSEI),)
	newtonpp_objs += sensei_adaptor.o insitu.o
endif

ifneq ($(USE_MAGI),)
	newtonpp_objs += read_magi.o
endif


newtonpp_clang15_omp:  stream_compact.a $(newtonpp_objs) newton.cpp
	$(CXX) $(OMP_FLAGS) $(MPI_FLAGS) $(HDF5_FLAGS) $(CFLAGS) \
	$(C_OPT_FLAGS) $(HAMR_FLAGS) $(SENSEI_FLAGS) -I./ \
	newton.cpp $(newtonpp_objs) \
	stream_compact.a ${CUDA}/libcudart_static.a \
	$(SENSEI_LINK) $(HAMR_LINK) $(CLINK) $(MPI_LINK) $(HDF5_LINK) $(OMP_LINK) \
	-o newtonpp_clang15_omp



galaxy_ic: galaxy_ic.cpp
	$(CXX) $(C_OPT_FLAGS)  galaxy_ic.cpp -o galaxy_ic

plot_ic: plot_ic.cpp
	$(CXX) $(C_OPT_FLAGS)  plot_ic.cpp -o plot_ic



